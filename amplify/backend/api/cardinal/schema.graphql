type User @model
  @auth(rules: [{ allow: owner, operations: [create, read, update, delete] }]) {
  id: ID!
  email: String!
  username: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  surveyCompleted: Boolean!
  survey: Survey @hasOne(fields: ["id"])
}

type Survey @model
  @auth(rules: [
    { allow: owner, operations: [create, read, update, delete] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  userId: ID!
  completedAt: AWSDateTime!
  
  # Demographics & Admissions
  gender: String!
  transgender: String!
  orientation: String!
  ethnicity: String!
  age: String!
  recruitedAthlete: String!
  familyIncome: String!
  birthOrder: String!
  secondarySchool: String!
  legacy: String!
  firstGen: String!
  financialAid: String!
  gapYear: String!
  placeOfOrigin: String!
  communityType: String!
  topChoice: String!
  earlyAction: String!
  privateCounselor: String!
  
  # Politics & Beliefs
  religion: String!
  religiosity: String!
  politics: String!
  politicalParty: String!
  
  # Academics and Extracurriculars
  studyHours: String!
  mathLevel: String!
  highSchoolExtracurriculars: [String!]!
  stanfordExtracurriculars: [String!]!
  studentGovPresident: String!
  academicInterest: String!
  postGraduatePlans: String!
  
  # Lifestyle
  virgin: String!
  firstSexualActivity: String!
  sexualPartners: String!
  computer: String!
  
  # Relationships
  user: User @belongsTo(fields: ["userId"])
}

# Custom resolvers for analytics
type AggregateResult {
  field: String!
  counts: [CountResult!]!
}

type CountResult {
  value: String!
  count: Int!
}

type CorrelationResult {
  field1: String!
  field2: String!
  correlations: [CorrelationPoint!]!
}

type CorrelationPoint {
  value1: String!
  value2: String!
  count: Int!
}

# Query type for our API
type Query {
  # Get aggregated data for a specific survey field
  aggregateSurveyData(field: String!): AggregateResult
    @function(name: "surveyAnalytics-${env}")
  
  # Get correlation analysis between two survey fields
  correlationAnalysis(field1: String!, field2: String!): CorrelationResult
    @function(name: "surveyAnalytics-${env}")
} 